ioctl() return values are negative if an error occurs. A positive
value can be returned legitimately.

This patch is required for jscal to work with kernels starting with
2.6.32; the axis and button map ioctls return the size of the buffer
used when everything goes well.

--- joystick-20051019.orig/utils/jscal.c
+++ joystick-20051019/utils/jscal.c
@@ -179,15 +179,15 @@
 {
 	int i,j;
 
-	if (ioctl(fd, JSIOCGAXES, &axes)) {
+	if (ioctl(fd, JSIOCGAXES, &axes) < 0) {
 		perror("jscal: error getting axes");
 		exit(1);
 	}
-	if (ioctl(fd, JSIOCGBUTTONS, &buttons)) {
+	if (ioctl(fd, JSIOCGBUTTONS, &buttons) < 0) {
 		perror("jscal: error getting buttons");
 		exit(1);
 	}
-	if (ioctl(fd, JSIOCGCORR, &corr)) {
+	if (ioctl(fd, JSIOCGCORR, &corr) < 0) {
 		perror("jscal: error getting correction");
 		exit(1);
 	}
@@ -218,7 +218,7 @@
 		corr[i].prec = 0;
 	}
 
-	if (ioctl(fd, JSIOCSCORR, &corr)) {
+	if (ioctl(fd, JSIOCSCORR, &corr) < 0) {
 		perror("jscal: error setting correction");
 		exit(1);
 	}
@@ -324,7 +324,7 @@
 
 	putchar('\n');
 
-	if (ioctl(fd, JSIOCSCORR, &corr)) {
+	if (ioctl(fd, JSIOCSCORR, &corr) < 0) {
 		perror("jscal: error setting correction");
 		exit(1);
 	}
@@ -342,11 +342,11 @@
 {
 	int i;
 
-	if (ioctl(fd, JSIOCGAXES, &axes)) {
+	if (ioctl(fd, JSIOCGAXES, &axes) < 0) {
 		perror("jscal: error getting axes");
 		exit(1);
 	}
-	if (ioctl(fd, JSIOCGBUTTONS, &buttons)) {
+	if (ioctl(fd, JSIOCGBUTTONS, &buttons) < 0) {
 		perror("jscal: error getting buttons");
 		exit(1);
 	}
@@ -400,7 +400,7 @@
 	        ax[i]=axmes[(axmap[i])];
 	}
 	//Read again current callibration settings
-	if (ioctl(fd, JSIOCGCORR, &corr)) {
+	if (ioctl(fd, JSIOCGCORR, &corr) < 0) {
 		perror("jscal: error getting correction");
 		exit(1);
 	}
@@ -408,7 +408,7 @@
 	for (i = 0; i < axes; i++) {
 	        corr_tmp[i]=corr[(ax[i])];
 	}
-	if (ioctl(fd, JSIOCSCORR, &corr_tmp)) {
+	if (ioctl(fd, JSIOCSCORR, &corr_tmp) < 0) {
 		perror("jscal: error setting correction");
 		exit(1);
 	}
@@ -419,15 +419,15 @@
 {
 	int i,j;
 
-	if (ioctl(fd, JSIOCGAXES, &axes)) {
+	if (ioctl(fd, JSIOCGAXES, &axes) < 0) {
 		perror("jscal: error getting axes");
 		exit(1);
 	}
-	if (ioctl(fd, JSIOCGBUTTONS, &buttons)) {
+	if (ioctl(fd, JSIOCGBUTTONS, &buttons) < 0) {
 		perror("jscal: error getting buttons");
 		exit(1);
 	}
-	if (ioctl(fd, JSIOCGCORR, &corr)) {
+	if (ioctl(fd, JSIOCGCORR, &corr) < 0) {
 		perror("jscal: error getting correction");
 		exit(1);
 	}
@@ -451,11 +451,11 @@
   int axis_mapping = 0;
   int btn_mapping = 0;
 
-	if (ioctl(fd, JSIOCGAXES, &axes)) {
+	if (ioctl(fd, JSIOCGAXES, &axes) < 0) {
 		perror("jscal: error getting axes");
 		exit(1);
 	}
-	if (ioctl(fd, JSIOCGBUTTONS, &buttons)) {
+	if (ioctl(fd, JSIOCGBUTTONS, &buttons) < 0) {
 		perror("jscal: error getting buttons");
 		exit(1);
 	}
@@ -557,7 +557,7 @@
 	int i,j;
 	int t = 0;
 
-	if (ioctl(fd, JSIOCGAXES, &axes)) {
+	if (ioctl(fd, JSIOCGAXES, &axes) < 0) {
 		perror("jscal: error getting axes");
 		exit(1);
 	}
@@ -618,7 +618,7 @@
 		exit(1);
 	}
 	
-	if (ioctl(fd, JSIOCSCORR, &corr)) {
+	if (ioctl(fd, JSIOCSCORR, &corr) < 0) {
 		perror("jscal: error setting correction");
 		exit(1);
 	}
@@ -629,12 +629,12 @@
 	int i;
 	struct js_event ev;
 
-	if (ioctl(fd, JSIOCGAXES, &axes)) {
+	if (ioctl(fd, JSIOCGAXES, &axes) < 0) {
 		perror("jscal: error getting axes");
 		exit(1);
 	}
 
-	if (ioctl(fd, JSIOCGBUTTONS, &buttons)) {
+	if (ioctl(fd, JSIOCGBUTTONS, &buttons) < 0) {
 		perror("jscal: error getting buttons");
 		exit(1);
 	}
@@ -735,7 +735,7 @@
 		exit(1);
 	}
 
-	if (ioctl(fd, JSIOCGVERSION, &version)) {
+	if (ioctl(fd, JSIOCGVERSION, &version) < 0) {
 		perror("jscal: error getting version");
 		exit(1);
 	}
